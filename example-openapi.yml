components:
  parameters:
    bbox:
      description: Only features that have a geometry that intersects the bounding
        box are selected.The bounding box is provided as four or six numbers, depending
        on whether the coordinate reference system includes a vertical axis (height
        or depth).
      explode: false
      in: query
      name: bbox
      required: false
      schema:
        items:
          type: number
        maxItems: 6
        minItems: 4
        type: array
      style: form
    bbox-crs:
      description: Indicates the coordinate reference system for the given bbox coordinates.
      explode: false
      in: query
      name: bbox-crs
      required: false
      schema:
        format: uri
        type: string
      style: form
    bbox-crs-epsg:
      description: Indicates the EPSG for the given bbox coordinates.
      explode: false
      in: query
      name: bbox-crs
      required: false
      schema:
        default: 4326
        type: integer
      style: form
    crs:
      description: Indicates the coordinate reference system for the results.
      explode: false
      in: query
      name: crs
      required: false
      schema:
        format: uri
        type: string
      style: form
    f:
      description: The optional f parameter indicates the output format which the
        server shall provide as part of the response document.  The default format
        is GeoJSON.
      explode: false
      in: query
      name: f
      required: false
      schema:
        default: json
        enum:
          - json
          - html
          - jsonld
        type: string
      style: form
    lang:
      description: The optional lang parameter instructs the server return a response
        in a certain language, if supported.  If the language is not among the available
        values, the Accept-Language header language will be used if it is supported.
        If the header is missing, the default server language is used. Note that providers
        may only support a single language (or often no language at all), that can
        be different from the server language.  Language strings can be written in
        a complex (e.g. "fr-CA,fr;q=0.9,en-US;q=0.8,en;q=0.7"), simple (e.g. "de")
        or locale-like (e.g. "de-CH" or "fr_BE") fashion.
      in: query
      name: lang
      required: false
      schema:
        default: en-US
        enum:
          - en-US
          - ar-EG
          - bs-Latn-BA
          - de-DE
          - es-ES
          - fr-FR
          - sr-Cyrl-RS
        type: string
    offset:
      description: The optional offset parameter indicates the index within the result
        set from which the server shall begin presenting results in the response document.  The
        first element has an index of 0 (default).
      explode: false
      in: query
      name: offset
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    resourceId:
      description: Configuration resource identifier
      in: path
      name: resourceId
      required: true
      schema:
        type: string
    skipGeometry:
      description: This option can be used to skip response geometries for each feature.
      explode: false
      in: query
      name: skipGeometry
      required: false
      schema:
        default: false
        type: boolean
      style: form
    vendorSpecificParameters:
      description: Additional "free-form" parameters that are not explicitly defined
      in: query
      name: vendorSpecificParameters
      schema:
        additionalProperties: true
        type: object
      style: form
  responses:
    '200':
      description: successful operation
    '204':
      description: no content
    Queryables:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/queryables'
      description: successful queryables operation
    Tiles:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/tiles'
      description: Retrieves the tiles description for this collection
    default:
      content:
        application/json:
          schema:
            $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/exception.yaml
      description: Unexpected error
  schemas:
    queryable:
      properties:
        description:
          description: a human-readable narrative describing the queryable
          type: string
        language:
          default:
            - en
          description: the language used for the title and description
          type: string
        queryable:
          description: the token that may be used in a CQL predicate
          type: string
        title:
          description: a human readable title for the queryable
          type: string
        type:
          description: the data type of the queryable
          type: string
        type-ref:
          description: a reference to the formal definition of the type
          format: url
          type: string
      required:
        - queryable
        - type
      type: object
    queryables:
      properties:
        queryables:
          items:
            $ref: '#/components/schemas/queryable'
          type: array
      required:
        - queryables
      type: object
    tilematrixsetlink:
      properties:
        tileMatrixSet:
          type: string
        tileMatrixSetURI:
          type: string
      required:
        - tileMatrixSet
      type: object
    tiles:
      properties:
        links:
          items:
            $ref: https://schemas.opengis.net/ogcapi/tiles/part1/1.0/openapi/ogcapi-tiles-1.yaml#/components/schemas/link
          type: array
        tileMatrixSetLinks:
          items:
            $ref: '#/components/schemas/tilematrixsetlink'
          type: array
      required:
        - tileMatrixSetLinks
        - links
      type: object
definitions:
  i18n_array:
    oneOf:
      - items:
          type: string
        type: array
      - patternProperties:
          ^[a-zA-Z]{2,3}([-_][a-zA-Z0-9]{2,3})?$:
            allOf:
              - items:
                  type: string
                type: array
        type: object
  i18n_string:
    oneOf:
      - type: string
      - patternProperties:
          ^[a-zA-Z]{2,3}([-_][a-zA-Z0-9]{2,3})?$:
            allOf:
              - type: string
        type: object
  provider:
    properties:
      PostgreSQL:
        properties:
          config:
            properties:
              options:
                properties:
                  connect_timeout:
                    type: integer
                  keepalives:
                    type: integer
                  keepalives_count:
                    type: integer
                  keepalives_idle:
                    type: integer
                  keepalives_interval:
                    type: integer
                  tcp_user_timeout:
                    type: integer
info:
  contact:
    email: you@example.org
    name:
      ar: "\u0627\u0633\u0645 \u0627\u0644\u0645\u0646\u0638\u0645\u0629"
      bs: Naziv organizacije
      de: Organisationsname
      en: Organization Name
      es: "Nombre de la organizaci\xF3n"
      fr: Nom de l'organisation
      sr: Naziv organizacije
    url: https://pygeoapi.io
    x-ogc-serviceContact:
      addresses:
        - administrativeArea: Administrative Area
          city: City
          country: Country
          deliveryPoint:
            - Mailing Address
          postalCode: Zip or Postal Code
      contactInstructions:
        ar: "\u062E\u0644\u0627\u0644 \u0633\u0627\u0639\u0627\u062A \u0627\u0644\u062E\
          \u062F\u0645\u0629. \u0639\u0637\u0644\u0629 \u0641\u064A \u0639\u0637\u0644\
          \u0627\u062A \u0646\u0647\u0627\u064A\u0629 \u0627\u0644\u0623\u0633\u0628\
          \u0648\u0639."
        bs: Tokom radnog vremena. Slobodno vikendom.
        de: "W\xE4hrend der Servicezeiten. Frei am Wochenende."
        en: During hours of service. Off on weekends.
        es: Durante el horario de servicio. Libre los fines de semana.
        fr: "Pendant les heures de service. Ferm\xE9 le week-end."
        sr: Tokom radnog vremena. Slobodno vikendom.
      emails:
        - value: you@example.org
      hoursOfService:
        ar: "\u0627\u0644\u0625\u062B\u0646\u064A\u0646-\u0627\u0644\u062C\u0645\u0639\
          \u0629 08:00-17:00"
        bs: Pon-Pet 08:00-17:00
        de: Mo-Fr 08:00-17:00
        en: Mo-Fr 08:00-17:00
        es: Lun-Vie 08:00-17:00
        fr: Lun-Ven 08:00-17:00
        sr: Pon-Pet 08:00-17:00
      links:
        - href: Contact URL
          type: text/html
      name: Lastname, Firstname
      phones:
        - type: main
          value: +xx-xxx-xxx-xxxx
        - type: fax
          value: +xx-xxx-xxx-xxxx
      position:
        ar: "\u0627\u0644\u0645\u0633\u0645\u0649 \u0627\u0644\u0648\u0638\u064A\u0641\
          \u064A"
        bs: Pozicija
        de: Positionsbezeichnung
        en: Position Title
        es: "T\xEDtulo del puesto"
        fr: "Intitul\xE9 du poste"
        sr: Naziv pozicije
      roles:
        - ar: "\u0646\u0642\u0637\u0629 \u0627\u0644\u0627\u062A\u0635\u0627\u0644"
          bs: "kontakt ta\u010Dka"
          de: Ansprechpartner
          en: pointOfContact
          es: punto de contacto
          fr: point de contact
          sr: "kontakt ta\u010Dka"
  description: pygeoapi provides an API to geospatial data
  license:
    name:
      ar: "\u0631\u062E\u0635\u0629 CC-BY 4.0"
      bs: CC-BY 4.0 licenca
      de: CC-BY 4.0 Lizenz
      en: CC-BY 4.0 license
      es: Licencia CC-BY 4.0
      fr: Licence CC-BY 4.0
      sr: CC-BY 4.0 licenca
    url: https://creativecommons.org/licenses/by/4.0/
  termsOfService: https://creativecommons.org/licenses/by/4.0/
  title: pygeoapi default instance
  version: 0.19.dev0
  x-keywords:
    - geospatial
    - data
    - api
openapi: 3.0.2
paths:
  /:
    get:
      description: Landing page
      operationId: getLandingPage
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Landing page
      tags:
        - server
  /admin/config:
    get:
      description: Get admin configuration
      operationId: getAdminConfig
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          content:
            application/json:
              schema: &id001
                $id: https://raw.githubusercontent.com/geopython/pygeoapi/master/pygeoapi/schemas/config/pygeoapi-config-0.x.yml
                $schema: https://json-schema.org/draft/2020-12/schema
                definitions:
                  i18n_array:
                    oneOf:
                      - items:
                          type: string
                        type: array
                      - patternProperties:
                          ^[a-zA-Z]{2,3}([-_][a-zA-Z0-9]{2,3})?$:
                            allOf:
                              - items:
                                  type: string
                                type: array
                        type: object
                  i18n_string:
                    oneOf:
                      - type: string
                      - patternProperties:
                          ^[a-zA-Z]{2,3}([-_][a-zA-Z0-9]{2,3})?$:
                            allOf:
                              - type: string
                        type: object
                  provider:
                    properties:
                      PostgreSQL:
                        properties:
                          config:
                            properties:
                              options:
                                properties:
                                  connect_timeout:
                                    type: integer
                                  keepalives:
                                    type: integer
                                  keepalives_count:
                                    type: integer
                                  keepalives_idle:
                                    type: integer
                                  keepalives_interval:
                                    type: integer
                                  tcp_user_timeout:
                                    type: integer
                description: pygeoapi configuration schema
                properties:
                  logging:
                    description: logging definitions
                    properties:
                      dateformat:
                        description: custom date format to use in logs
                        type: string
                      level:
                        description:
                          "The logging level (see https://docs.python.org/3/library/logging.html#logging-levels).\n\
                          If level is defined and logfile is undefined, logging messages\
                          \ are output to the server\u2019s stdout"
                        enum:
                          - CRITICAL
                          - ERROR
                          - WARNING
                          - INFO
                          - DEBUG
                          - NOTSET
                        type: string
                      logfile:
                        description: the full file path to the logfile.
                        type: string
                      logformat:
                        description: custom logging format
                        type: string
                      rotation:
                        description: log rotation settings
                        properties:
                          backup_count:
                            description: how many backups to keep
                            type: integer
                          interval:
                            description: how often to rotate in time mode
                            type: integer
                          max_bytes:
                            description: when to rotate in size mode
                            type: integer
                          mode:
                            description: whether to rotate based on size or time
                            enum:
                              - size
                              - time
                            type: string
                          when:
                            description: type of interval
                            enum:
                              - s
                              - m
                              - h
                              - d
                              - w0-w6
                              - midnight
                            type: string
                        required:
                          - mode
                        type: object
                    required:
                      - level
                    type: object
                  metadata:
                    description: server metadata
                    properties:
                      contact:
                        description: service contact details
                        properties:
                          address:
                            description: postal address
                            type: string
                          city:
                            description: city
                            type: string
                          country:
                            description: country
                            type: string
                          email:
                            description: email address
                            type: string
                          fax:
                            description: fax number
                            type: string
                          hours:
                            description: hours of service
                            type: string
                          instructions:
                            description: contact instructions
                            type: string
                          name:
                            description: Lastname, Firstname
                            type: string
                          phone:
                            description: phone number
                            type: string
                          position:
                            description: position
                            type: string
                          postalcode:
                            description: postal or ZIP code
                            type: string
                          role:
                            description: role as per the ISO 19115 CI_RoleCode codelist
                            type: string
                          stateorprovince:
                            description: administrative area
                            type: string
                          url:
                            description: URL of contact
                            type: string
                        required:
                          - name
                        type: object
                      identification:
                        description: server identification
                        properties:
                          description:
                            $ref: '#/definitions/i18n_string'
                            description: some descriptive text about the service
                          keywords:
                            $ref: '#/definitions/i18n_array'
                            description: list of keywords about the service
                          keywords_type:
                            description: keyword type as per the ISO 19115 MD_KeywordTypeCode
                              codelist
                            enum:
                              - discipline
                              - temporal
                              - place
                              - theme
                              - stratum
                            type: string
                          terms_of_service:
                            $ref: '#/definitions/i18n_string'
                            description: terms of service
                          title:
                            $ref: '#/definitions/i18n_string'
                            description: the title of the service
                          url:
                            description: informative URL about the service
                            type: string
                        required:
                          - title
                          - description
                          - keywords
                          - url
                        type: object
                      license:
                        description: licensing details
                        properties:
                          name:
                            $ref: '#/definitions/i18n_string'
                            description: licensing details
                          url:
                            $ref: '#/definitions/i18n_string'
                            description: license URL
                        required:
                          - name
                        type: object
                      provider:
                        description: service provider details
                        properties:
                          name:
                            $ref: '#/definitions/i18n_string'
                            description: organization name
                          url:
                            $ref: '#/definitions/i18n_string'
                            description: URL of provider
                        required:
                          - name
                        type: object
                    required:
                      - identification
                      - license
                      - provider
                      - contact
                    type: object
                  resources:
                    description: collections or processes published by the server
                    patternProperties:
                      ^.*$: &id002
                        anyOf:
                          - description: base resource object
                            properties:
                              description:
                                $ref: '#/definitions/i18n_string'
                                description: some descriptive text about the service
                              extents:
                                description: spatial and temporal extents
                                properties:
                                  spatial:
                                    description: spatial extent and CRS
                                    properties:
                                      bbox:
                                        description: bounding box of resource
                                        items:
                                          type: number
                                        maxItems: 6
                                        minItems: 4
                                        type: array
                                      crs:
                                        default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
                                        description: coordinate reference system of
                                          bbox
                                        type: string
                                    required:
                                      - bbox
                                    type: object
                                  temporal:
                                    description: temporal extent of resource
                                    properties:
                                      begin:
                                        format: date-time
                                        nullable: true
                                        type:
                                          - string
                                          - 'null'
                                      end:
                                        format: date-time
                                        nullable: true
                                        type:
                                          - string
                                          - 'null'
                                      trs:
                                        default: http://www.opengis.net/def/uom/ISO-8601/0/Gregorian
                                        description: temporal reference system of features
                                        type: string
                                    type: object
                                required:
                                  - spatial
                                type: object
                              keywords:
                                $ref: '#/definitions/i18n_array'
                                description: list of keywords about the service
                              linked-data:
                                description: linked data configuration
                                properties:
                                  context:
                                    description: additional JSON-LD context
                                    items:
                                      patternProperties:
                                        ^.*$:
                                          anyOf:
                                            - type: string
                                            - type: object
                                      type: object
                                    type: array
                                  item_template:
                                    description: path to JSON-LD Jinja2 template
                                    type: string
                                type: object
                              links:
                                description: list of related links
                                items:
                                  properties:
                                    href:
                                      description: URL
                                      type: string
                                    hreflang:
                                      description: language
                                      type: string
                                    length:
                                      description: optional content size in bytes (e.g.
                                        for download links)
                                      type: integer
                                    rel:
                                      description: link relations per https://www.iana.org/assignments/link-relations/link-relations.xhtml
                                      type: string
                                    title:
                                      description: title
                                      type: string
                                    type:
                                      description: MIME type
                                      type: string
                                  required:
                                    - type
                                    - rel
                                    - href
                                  type: object
                                minItems: 0
                                type: array
                              providers:
                                description: required connection information
                                items:
                                  properties:
                                    crs:
                                      default:
                                        - http://www.opengis.net/def/crs/OGC/1.3/CRS84
                                      description: 'supported coordinate reference systems
                                        (CRSs).

                                        pygeoapi will always provide or add the default
                                        if not specified.'
                                      items:
                                        format: uri
                                        type: string
                                      type: array
                                      uniqueItems: true
                                    data:
                                      anyOf:
                                        - type: string
                                        - type: object
                                      description: the data filesystem path or URL,
                                        depending on plugin setup
                                    default:
                                      description: 'whether the provider is the default.  If
                                        not specified, the

                                        first provider definition is considered the
                                        default'
                                      type: boolean
                                    editable:
                                      default: false
                                      description: whether the resource is editable
                                      type: boolean
                                    format:
                                      description: default format
                                      properties:
                                        mimetype:
                                          description: format mimetype
                                          type: string
                                        name:
                                          description: format name
                                          type: string
                                      required:
                                        - name
                                        - mimetype
                                      type: object
                                    geometry:
                                      description: the field corresponding to the geometry
                                      properties:
                                        x_field:
                                          description: the field corresponding to the
                                            x geometry
                                          type: string
                                        y_field:
                                          description: the field corresponding to the
                                            y geometry
                                          type: string
                                      required:
                                        - x_field
                                        - y_field
                                      type: object
                                    id_field:
                                      description: required for vector data, the field
                                        corresponding to the ID
                                      type: string
                                    name:
                                      description: 'see `pygeoapi.plugin` for supported
                                        provider names.

                                        For custom built plugins, use the import path
                                        (e.g. `mypackage.provider.MyProvider`)'
                                      type: string
                                    options:
                                      description: optional options key value pairs
                                        to pass to provider (i.e. GDAL creation)
                                      oneOf:
                                        - $ref: '#/definitions/provider/properties/PostgreSQL/properties/config/properties/options'
                                      type: object
                                    properties:
                                      description: only return the following properties,
                                        in order
                                      items:
                                        type: string
                                      minItems: 1
                                      type: array
                                      uniqueItems: true
                                    storage_crs:
                                      default: http://www.opengis.net/def/crs/OGC/1.3/CRS84
                                      description: 'the CRS identifier, from the list
                                        of supported CRS identifiers, that may be used
                                        to retrieve

                                        features from a collection without the need
                                        to apply a CRS transformation.'
                                      format: uri
                                      type: string
                                    storage_crs_coordinate_epoch:
                                      description: 'point in time at which coordinates
                                        in the spatial feature collection are referenced
                                        to the dynamic

                                        coordinate reference system in `storageCrs`,
                                        that may be used to retrieve features from a

                                        collection without the need to apply a change
                                        of coordinate epoch. It is expressed as a decimal

                                        year in the Gregorian calendar.'
                                      example: 2017-03-25 in the Gregorian calendar
                                        is epoch 2017.23
                                      format: uri
                                      type: number
                                    table:
                                      description: table name for RDBMS-based providers
                                      type: string
                                    time_field:
                                      description: optional field corresponding to the
                                        temporal property of the dataset
                                      type: string
                                    title_field:
                                      description: optional field of which property
                                        to display as title/label on HTML pages
                                      type: string
                                    type:
                                      description: underlying data geospatial type
                                      enum:
                                        - feature
                                        - coverage
                                        - record
                                        - map
                                        - tile
                                        - edr
                                        - stac
                                      type: string
                                  required:
                                    - type
                                    - name
                                    - data
                                  type: object
                                type: array
                              title:
                                $ref: '#/definitions/i18n_string'
                                description: the title of the service
                              type:
                                description: resource type
                                enum:
                                  - collection
                                  - stac-collection
                                type: string
                              visibility:
                                default: default
                                description: visibility state of the resource
                                enum:
                                  - default
                                  - hidden
                                type: string
                            required:
                              - type
                              - title
                              - description
                              - keywords
                              - extents
                              - providers
                            type: object
                          - description: process object
                            properties:
                              processor:
                                description: process binding
                                properties:
                                  name:
                                    description: 'see `pygeoapi.plugin` for supported
                                      provider names.

                                      For custom built plugins, use the import path
                                      (e.g. `mypackage.provider.MyProvider`)'
                                    type: string
                                required:
                                  - name
                                type: object
                              type:
                                description: resource type
                                enum:
                                  - process
                                type: string
                            required:
                              - type
                              - processor
                            type: object
                    type: object
                  server:
                    description: server object
                    properties:
                      admin:
                        default: false
                        description: whether to enable the Admin API (default is false)
                        type: boolean
                      api_rules:
                        description: optional API design rules to which pygeoapi should
                          adhere
                        properties:
                          api_version:
                            description: optional semantic API version number override
                            type: string
                          strict_slashes:
                            description: whether trailing slashes are allowed in URLs
                              (disallow = True)
                            type: boolean
                          url_prefix:
                            description: 'Set to include a prefix in the URL path
                              (e.g. https://base.com/my_prefix/endpoint).

                              Please refer to the configuration section of the documentation
                              for more info.'
                            type: string
                          version_header:
                            description: API version response header (leave empty
                              or unset to omit this header)
                            type: string
                        type: object
                      bind:
                        description: binding server information
                        properties:
                          host:
                            description: binding IP
                            type: string
                          port:
                            description: binding port
                            type: integer
                        required:
                          - host
                          - port
                        type: object
                      cors:
                        default: false
                        description: boolean on whether server should support CORS
                        type: boolean
                      encoding:
                        description: default server encoding
                        type: string
                      gzip:
                        description: default server config to gzip/compress responses
                          to requests with gzip in the Accept-Encoding header
                        type: boolean
                      language:
                        description: default server language
                        type: string
                      languages:
                        description: supported languages
                        items:
                          description: supported language
                          type: string
                        type: array
                      limit:
                        default: 10
                        description: server limit on number of items to return
                        type: integer
                      locale_dir:
                        description: directory of translations
                        type: string
                      manager:
                        description: optional OGC API - Processes asynchronous job
                          management
                        properties:
                          connection:
                            description: connection info to store jobs (e.g. filepath)
                            type: string
                          name:
                            description: plugin name (see `pygeoapi.plugin` for supported
                              process_managers)
                            type: string
                          output_dir:
                            description: temporary file area for storing job results
                              (files)
                            type: string
                        required:
                          - name
                          - connection
                          - output_dir
                        type: object
                      map:
                        description: leaflet map setup for HTML pages
                        properties:
                          attribution:
                            description: map attribution
                            type: string
                          url:
                            description: URI template of tile server
                            type: string
                        required:
                          - url
                          - attribution
                        type: object
                      mimetype:
                        description: default MIME type
                        type: string
                      ogc_schemas_location:
                        description: local copy of http://schemas.opengis.net
                        type: string
                      pretty_print:
                        default: false
                        description: whether JSON responses should be pretty-printed
                        type: boolean
                      templates:
                        description: optional configuration to specify a different
                          set of templates for HTML pages. Recommend using absolute
                          paths. Omit this to use the default provided templates
                        properties:
                          path:
                            description: path to templates folder containing the Jinja2
                              template HTML files
                            type: string
                          static:
                            description: path to static folder containing css, js,
                              images and other static files referenced by the template
                            type: string
                        type: object
                      url:
                        description: URL of server (as used by client)
                        type: string
                    required:
                      - bind
                      - url
                      - mimetype
                      - encoding
                      - map
                    type: object
                required:
                  - server
                  - logging
                  - metadata
                  - resources
                title: pygeoapi configuration schema
                type: object
          description: Successful response
      summary: Get admin configuration
      tags:
        - admin
    patch:
      description: Partially update admin configuration
      operationId: patchAdminConfig
      requestBody:
        content:
          application/json:
            schema: *id001
        description: Updates admin configuration
        required: true
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Partially update admin configuration
      tags:
        - admin
    put:
      description: Update admin configuration full
      operationId: putAdminConfig
      requestBody:
        content:
          application/json:
            schema: *id001
        description: Updates admin configuration
        required: true
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Update admin configuration full
      tags:
        - admin
  /admin/config/resources:
    get:
      description: Get admin configuration resources
      operationId: getAdminConfigResources
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          content:
            application/json:
              schema: *id002
          description: Successful response
      summary: Get admin configuration resources
      tags:
        - admin
    post:
      description: Create admin configuration resource
      operationId: postAdminConfigResource
      requestBody:
        content:
          application/json:
            schema: *id002
        description: Adds resource to configuration
        required: true
      responses:
        '201':
          description: Successful creation
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Create admin configuration resource
      tags:
        - admin
  /admin/config/resources/{resourceId}:
    delete:
      description: Delete admin configuration resource
      operationId: deleteAdminConfigResource
      parameters:
        - $ref: '#/components/parameters/resourceId'
      responses:
        '204':
          $ref: '#/components/responses/204'
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Delete admin configuration resource
      tags:
        - admin
    get:
      description: Get admin configuration resource
      operationId: getAdminConfigResource
      parameters:
        - $ref: '#/components/parameters/resourceId'
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          content:
            application/json:
              schema: *id002
          description: Successful response
      summary: Get admin configuration resource
      tags:
        - admin
    patch:
      description: Partially update admin configuration resource
      operationId: patchAdminConfigResource
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        content:
          application/json:
            schema: *id002
        description: Updates admin configuration resource
        required: true
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Partially update admin configuration resource
      tags:
        - admin
    put:
      description: Update admin configuration resource
      operationId: putAdminConfigResource
      parameters:
        - $ref: '#/components/parameters/resourceId'
      requestBody:
        content:
          application/json:
            schema: *id002
        description: Updates admin configuration resource
        required: true
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Update admin configuration resource
      tags:
        - admin
  /collections:
    get:
      description: Collections
      operationId: getCollections
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Collections
      tags:
        - server
  /collections/bathingwater-estonia:
    get:
      description: Bathing water sources data used by water supply systems under the
        supervision of the Health Council from the Water Health Information System.
      operationId: describeBathingwater-estoniaCollection
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Bathing Water Sources metadata
      tags:
        - bathingwater-estonia
  /collections/bathingwater-estonia/items:
    get:
      description: Bathing water sources data used by water supply systems under the
        supervision of the Health Council from the Water Health Information System.
      operationId: getBathingwater-estoniaFeatures
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
        - $ref: '#/components/parameters/bbox'
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/bbox-crs'
        - description: The properties that should be included for each feature. The
            parameter value is a comma-separated list of property names.
          explode: false
          in: query
          name: properties
          required: false
          schema:
            items:
              enum: []
              type: string
            type: array
          style: form
        - $ref: '#/components/parameters/vendorSpecificParameters'
        - $ref: '#/components/parameters/skipGeometry'
        - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Bathing Water Sources items
      tags:
        - bathingwater-estonia
    options:
      description: Bathing water sources data used by water supply systems under the
        supervision of the Health Council from the Water Health Information System.
      operationId: optionsBathingwater-estoniaFeatures
      responses:
        '200':
          description: options response
      summary: Options for Bathing Water Sources items
      tags:
        - bathingwater-estonia
  /collections/bathingwater-estonia/items/{featureId}:
    get:
      description: Bathing water sources data used by water supply systems under the
        supervision of the Health Council from the Water Health Information System.
      operationId: getBathingwater-estoniaFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Bathing Water Sources item by id
      tags:
        - bathingwater-estonia
    options:
      description: Bathing water sources data used by water supply systems under the
        supervision of the Health Council from the Water Health Information System.
      operationId: optionsBathingwater-estoniaFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      responses:
        '200':
          description: options response
      summary: Options for Bathing Water Sources item by id
      tags:
        - bathingwater-estonia
  /collections/bathingwater-estonia/tiles:
    get:
      description: Bathing water sources data used by water supply systems under the
        supervision of the Health Council from the Water Health Information System.
      operationId: describeBathingwater-estoniaTiles
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: '#/components/responses/Tiles'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Fetch a Bathing Water Sources tiles description
      tags:
        - bathingwater-estonia
  /collections/bathingwater-estonia/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}:
    get:
      description: Bathing water sources data used by water supply systems under the
        supervision of the Health Council from the Water Health Information System.
      operationId: getBathingwater-estoniaTiles
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/tiles/part1/1.0/openapi/ogcapi-tiles-1.yaml#/components/parameters/tileMatrixSetId
        - $ref: https://schemas.opengis.net/ogcapi/tiles/part1/1.0/openapi/ogcapi-tiles-1.yaml#/components/parameters/tileMatrix
        - $ref: https://schemas.opengis.net/ogcapi/tiles/part1/1.0/openapi/ogcapi-tiles-1.yaml#/components/parameters/tileRow
        - $ref: https://schemas.opengis.net/ogcapi/tiles/part1/1.0/openapi/ogcapi-tiles-1.yaml#/components/parameters/tileCol
        - description: The optional f parameter indicates the output format which the
            server shall provide as part of the response document.
          explode: false
          in: query
          name: f
          required: false
          schema:
            default: pbf
            enum:
              - pbf
            type: string
          style: form
      responses:
        '200':
          content:
            application/vnd.mapbox-vector-tile:
              schema:
                format: binary
                type: string
          description: successful operation
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get a Bathing Water Sources tile
      tags:
        - bathingwater-estonia
  /collections/canada-metadata:
    get:
      description: Sample metadata records from open.canada.ca
      operationId: describeCanada-metadataCollection
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Open Canada Sample Data metadata
      tags:
        - canada-metadata
  /collections/canada-metadata/items:
    get:
      description: Sample metadata records from open.canada.ca
      operationId: getCanada-metadataFeatures
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
        - $ref: '#/components/parameters/bbox'
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/bbox-crs'
        - description: The properties that should be included for each feature. The
            parameter value is a comma-separated list of property names.
          explode: false
          in: query
          name: properties
          required: false
          schema:
            items:
              enum:
                - created
                - updated
                - type
                - title
                - description
                - providers
                - externalIds
                - themes
                - q
              type: string
            type: array
          style: form
        - $ref: '#/components/parameters/vendorSpecificParameters'
        - $ref: '#/components/parameters/skipGeometry'
        - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
        - $ref: '#/components/parameters/offset'
        - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/q.yaml
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/datetime
        - explode: false
          in: query
          name: created
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - explode: false
          in: query
          name: updated
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - explode: false
          in: query
          name: type
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: title
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: description
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: providers
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: externalIds
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: themes
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Open Canada Sample Data items
      tags:
        - canada-metadata
    options:
      description: Sample metadata records from open.canada.ca
      operationId: optionsCanada-metadataFeatures
      responses:
        '200':
          description: options response
      summary: Options for Open Canada Sample Data items
      tags:
        - canada-metadata
  /collections/canada-metadata/items/{featureId}:
    get:
      description: Sample metadata records from open.canada.ca
      operationId: getCanada-metadataFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Open Canada Sample Data item by id
      tags:
        - canada-metadata
    options:
      description: Sample metadata records from open.canada.ca
      operationId: optionsCanada-metadataFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      responses:
        '200':
          description: options response
      summary: Options for Open Canada Sample Data item by id
      tags:
        - canada-metadata
  /collections/canada-metadata/queryables:
    get:
      description: Sample metadata records from open.canada.ca
      operationId: getCanada-metadataQueryables
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Open Canada Sample Data queryables
      tags:
        - canada-metadata
  /collections/canada-metadata/schema:
    get:
      description: Sample metadata records from open.canada.ca
      operationId: getCanada-metadataSchema
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Open Canada Sample Data schema
      tags:
        - canada-metadata
  /collections/gdps-temperature:
    get:
      description: Sample from the Global Deterministic Prediction System
      operationId: describeGdps-temperatureCollection
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Sample from the Global Deterministic Prediction System metadata
      tags:
        - gdps-temperature
  /collections/gdps-temperature/coverage:
    get:
      description: Sample from the Global Deterministic Prediction System
      operationId: getGdps-temperatureCoverage
      parameters:
        - $ref: '#/components/parameters/lang'
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/bbox-crs'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Sample from the Global Deterministic Prediction System coverage
      tags:
        - gdps-temperature
  /collections/lakes:
    get:
      description: Lakes of the world, public domain
      operationId: describeLakesCollection
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes metadata
      tags:
        - lakes
  /collections/lakes/items:
    get:
      description: Lakes of the world, public domain
      operationId: getLakesFeatures
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
        - $ref: '#/components/parameters/bbox'
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/bbox-crs'
        - description: The properties that should be included for each feature. The
            parameter value is a comma-separated list of property names.
          explode: false
          in: query
          name: properties
          required: false
          schema:
            items:
              enum:
                - id
                - scalerank
                - name
                - name_alt
                - admin
                - featureclass
              type: string
            type: array
          style: form
        - $ref: '#/components/parameters/vendorSpecificParameters'
        - $ref: '#/components/parameters/skipGeometry'
        - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
        - $ref: '#/components/parameters/offset'
        - explode: false
          in: query
          name: id
          required: false
          schema:
            type: integer
          style: form
        - explode: false
          in: query
          name: scalerank
          required: false
          schema:
            type: integer
          style: form
        - explode: false
          in: query
          name: name
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: name_alt
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: admin
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: featureclass
          required: false
          schema:
            type: string
          style: form
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes items
      tags:
        - lakes
    options:
      description: Lakes of the world, public domain
      operationId: optionsLakesFeatures
      responses:
        '200':
          description: options response
      summary: Options for Large Lakes items
      tags:
        - lakes
  /collections/lakes/items/{featureId}:
    get:
      description: Lakes of the world, public domain
      operationId: getLakesFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes item by id
      tags:
        - lakes
    options:
      description: Lakes of the world, public domain
      operationId: optionsLakesFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      responses:
        '200':
          description: options response
      summary: Options for Large Lakes item by id
      tags:
        - lakes
  /collections/lakes/queryables:
    get:
      description: Lakes of the world, public domain
      operationId: getLakesQueryables
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes queryables
      tags:
        - lakes
  /collections/lakes/schema:
    get:
      description: Lakes of the world, public domain
      operationId: getLakesSchema
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Large Lakes schema
      tags:
        - lakes
  /collections/mapserver_world_map:
    get:
      description: Experimental World Map from MapServer
      operationId: describeMapserver_world_mapCollection
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Experimental World Map from MapServer metadata
      tags:
        - mapserver_world_map
  /collections/mapserver_world_map/map:
    get:
      description: "{'en': 'Experimental World Map from MapServer', 'ar': '\u062E\u0631\
        \u064A\u0637\u0629 \u0627\u0644\u0639\u0627\u0644\u0645 \u0627\u0644\u062A\
        \u062C\u0631\u064A\u0628\u064A\u0629 \u0645\u0646 MapServer', 'bs': 'Eksperimentalna\
        \ svjetska karta iz MapServera', 'de': 'Experimentelle Weltkarte von MapServer',\
        \ 'es': 'Mapa mundial experimental de MapServer', 'fr': 'Carte du monde exp\xE9\
        rimentale de MapServer', 'sr': 'Eksperimentalna svetska mapa iz MapServera'}\
        \ map"
      operationId: getMap
      parameters:
        - $ref: '#/components/parameters/bbox'
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/datetime
        - description: Response image width
          explode: false
          in: query
          name: width
          required: false
          schema:
            type: integer
          style: form
        - description: Response image height
          explode: false
          in: query
          name: height
          required: false
          schema:
            type: integer
          style: form
        - description: Background transparency of map (default=true).
          explode: false
          in: query
          name: transparent
          required: false
          schema:
            default: true
            type: boolean
          style: form
        - $ref: '#/components/parameters/bbox-crs-epsg'
        - description: The optional f parameter indicates the output format which the
            server shall provide as part of the response document.  The default format
            is GeoJSON.
          explode: false
          in: query
          name: f
          required: false
          schema:
            default: png
            enum:
              - png
            type: string
          style: form
      responses:
        '200':
          content:
            application/json: {}
          description: Response
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get map
      tags:
        - mapserver_world_map
  /collections/obs:
    get:
      description: My awesome observations
      operationId: describeObsCollection
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Collection
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations metadata
      tags:
        - obs
  /collections/obs/items:
    get:
      description: My awesome observations
      operationId: getObsFeatures
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
        - $ref: '#/components/parameters/bbox'
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/limit
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/bbox-crs'
        - description: The properties that should be included for each feature. The
            parameter value is a comma-separated list of property names.
          explode: false
          in: query
          name: properties
          required: false
          schema:
            items:
              enum:
                - id
                - stn_id
                - datetime
                - value
              type: string
            type: array
          style: form
        - $ref: '#/components/parameters/vendorSpecificParameters'
        - $ref: '#/components/parameters/skipGeometry'
        - $ref: https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/parameters/sortby.yaml
        - $ref: '#/components/parameters/offset'
        - explode: false
          in: query
          name: id
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: stn_id
          required: false
          schema:
            type: integer
          style: form
        - explode: false
          in: query
          name: datetime
          required: false
          schema:
            type: string
          style: form
        - explode: false
          in: query
          name: value
          required: false
          schema:
            type: number
          style: form
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Features
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations items
      tags:
        - obs
    options:
      description: My awesome observations
      operationId: optionsObsFeatures
      responses:
        '200':
          description: options response
      summary: Options for Observations items
      tags:
        - obs
  /collections/obs/items/{featureId}:
    get:
      description: My awesome observations
      operationId: getObsFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/Feature
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations item by id
      tags:
        - obs
    options:
      description: My awesome observations
      operationId: optionsObsFeature
      parameters:
        - $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/parameters/featureId
      responses:
        '200':
          description: options response
      summary: Options for Observations item by id
      tags:
        - obs
  /collections/obs/queryables:
    get:
      description: My awesome observations
      operationId: getObsQueryables
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations queryables
      tags:
        - obs
  /collections/obs/schema:
    get:
      description: My awesome observations
      operationId: getObsSchema
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: '#/components/responses/Queryables'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '404':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/NotFound
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: Get Observations schema
      tags:
        - obs
  /conformance:
    get:
      description: API conformance definition
      operationId: getConformanceDeclaration
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        '500':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/ServerError
      summary: API conformance definition
      tags:
        - server
  /jobs:
    get:
      description: Retrieve a list of jobs
      operationId: getJobs
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve jobs list
      tags:
        - jobs
  /jobs/{jobId}:
    delete:
      description: Cancel / delete job
      operationId: deleteJob
      parameters:
        - &id003
          description: job identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        '204':
          $ref: '#/components/responses/204'
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Cancel / delete job
      tags:
        - jobs
    get:
      description: Retrieve job details
      operationId: getJob
      parameters:
        - *id003
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job details
      tags:
        - jobs
  /jobs/{jobId}/results:
    get:
      description: Retrieve job results
      operationId: getJobResults
      parameters:
        - *id003
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Retrieve job results
      tags:
        - jobs
  /openapi:
    get:
      description: This document
      operationId: getOpenapi
      parameters:
        - $ref: '#/components/parameters/f'
        - $ref: '#/components/parameters/lang'
        - description: UI to render the OpenAPI document
          explode: false
          in: query
          name: ui
          required: false
          schema:
            default: swagger
            enum:
              - swagger
              - redoc
            type: string
          style: form
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: https://schemas.opengis.net/ogcapi/features/part1/1.0/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter
        default:
          $ref: '#/components/responses/default'
      summary: This document
      tags:
        - server
  /processes:
    get:
      description: Processes
      operationId: getProcesses
      parameters:
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ProcessList.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Processes
      tags:
        - server
  /processes/hello-world:
    get:
      description: An example process that takes a name as input, and echoes it back
        as output. Intended to demonstrate a simple process with a single literal
        input.
      operationId: describeHello-worldProcess
      parameters:
        - $ref: '#/components/parameters/f'
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: Get process metadata
      tags:
        - hello-world
  /processes/hello-world/execution:
    post:
      description: An example process that takes a name as input, and echoes it back
        as output. Intended to demonstrate a simple process with a single literal
        input.
      operationId: executeHello-worldJob
      requestBody:
        content:
          application/json:
            example:
              inputs:
                message: An optional message.
                name: World
            schema:
              $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/schemas/execute.yaml
        description: Mandatory execute request JSON
        required: true
      responses:
        '200':
          $ref: '#/components/responses/200'
        '201':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ExecuteAsync.yaml
        '404':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/NotFound.yaml
        '500':
          $ref: https://schemas.opengis.net/ogcapi/processes/part1/1.0/openapi/responses/ServerError.yaml
        default:
          $ref: '#/components/responses/default'
      summary: Process Hello World execution
      tags:
        - hello-world
  /stac:
    get:
      description: SpatioTemporal Asset Catalog
      operationId: getStacCatalog
      parameters: []
      responses:
        '200':
          $ref: '#/components/responses/200'
        default:
          $ref: '#/components/responses/default'
      summary: SpatioTemporal Asset Catalog
      tags:
        - stac
servers:
  - description: pygeoapi provides an API to geospatial data
    url: http://0.0.0.0:5001
tags:
  - description: pygeoapi provides an API to geospatial data
    externalDocs:
      description: information
      url: https://example.org
    name: server
  - description: My awesome observations
    name: obs
  - description: Lakes of the world, public domain
    name: lakes
  - description: Experimental World Map from MapServer
    name: mapserver_world_map
  - description: Sample from the Global Deterministic Prediction System
    name: gdps-temperature
  - description: Sample metadata records from open.canada.ca
    name: canada-metadata
  - description: Bathing water sources data used by water supply systems under the supervision
      of the Health Council from the Water Health Information System.
    name: bathingwater-estonia
  - name: coverages
  - name: edr
  - name: records
  - name: features
  - name: maps
  - name: processes
  - name: jobs
  - name: tiles
  - name: stac
